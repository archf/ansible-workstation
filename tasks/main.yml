---
# file: tasks/main.yml

# specify the packages and the packager to use
- name: load OS specific variables (see ../vars/*)
  include_vars: "{{ansible_facts['os_family']}}.yml"

- name: install ppas and repos on ubuntu distributions
  apt_repository:
    repo: "{{item}}"
    # state: absent
  loop: "{{apt_ppas}}"
  when: ansible_facts['distribution'] == "Ubuntu"

- name: install repos on Debian derivatives
  apt_repository:
    repo: "{{item}}"
    # state: absent
  loop: "{{apt_repos}}"
  when: ansible_facts['os_family'] == "Debian"

- name: add postgresql gpg key
  apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
  when: ansible_facts['os_family'] == "Debian"

- import_tasks: i3wm.yml
  when: workstation_i3wm

# we cannot use the package module because we have no access to the
# update_cache option and this is required after we have installed a gpg key.
- name: install os packages on Debian os family
  apt:
    name: "{{workstation_pkgs}}"
    state: "{{workstation_pkg_state}}"
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: install os packages
  package: name={{workstation_pkgs}} state={{workstation_pkg_state}}
  when: ansible_facts['os_family'] != "Debian"

- name: install OS pip packages
  command: "{{'/usr/bin/pip3' if ansible_facts['os_family'] == 'Debian' else '/usr/bin/pip'}} -q install {{workstation_pip_pkgs|join(' ')}}"
  become: yes
  register: pip_cmd_result
  changed_when: pip_cmd_result['rc'] == 0 and pip_cmd_result['stdout_lines'] == ""

# - debug: var=pip_cmd_result.stdout_lines
#   when: pip_cmd_result.stdout_lines

# # also in dotfiles makefile.
# # commented because not idempotent
# - name: install hexchat colorsheme
#   unarchive:
#     src: https://dl.hexchat.net/themes/Monokai.hct
#     dest: ~/.config/hexchat
#     remote_src: True
#   become: no

- name: install entr (fs watcher) on rhel by script
  script: install_entr.sh
  when: ansible_facts['os_family'] != 'Debian'

- name: change dumpcap capabilities CAP_NET_RAW+eip => use wireshark as non-root
  capabilities: path="{{dumpcap_path}}" capability='CAP_NET_RAW+eip'

- name: change dumpcap capabilities CAP_NET_ADMIN+eip => use wireshark as non-root
  capabilities: path="{{dumpcap_path}}" capability='CAP_NET_ADMIN+eip'
