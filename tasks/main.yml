---
# file: tasks/main.yml

# specify the packages and the packager to use
- name: load OS specific variables (see ../vars/*)
  include_vars: "{{ansible_os_family}}.yml"

- name: install ppas and repos on ubuntu distributions
  apt_repository: repo="{{item}}"
  with_items: "{{apt_ppas}}"
  when: ansible_distribution == "Ubuntu"

- name: install repos on Debian derivatives
  apt_repository: repo="{{item}}"
  with_items: "{{apt_repos}}"
  when: ansible_os_family == "Debian"

- name: add postgresql gpg key
  apt_key:
    url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
  when: ansible_os_family == "Debian"

- name: add i3wm gpg key
  apt_key:
    file: "{{role_path}}/files/sur5r-keyring-2015.gpg"
    id: 'E3CA1A89941C42E6'
  when: ansible_os_family == "Debian"

# we cannot use the package module because we have no access to the
# update_cache option and this is required after we have installed a gpg key.
- name: install os packages on Debian os family
  apt:
    name: "{{workstation_pkgs}}"
    state: "{{workstation_pkg_state}}"
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: install os packages
  package: name={{workstation_pkgs}} state={{workstation_pkg_state}}
  when: ansible_os_family != "Debian"

- name: install pip packages
  command: "{{'/usr/bin/pip3' if ansible_os_family == 'Debian' else '/usr/bin/pip'}} -q install {{workstation_pip_pkgs|join(' ')}}"
  become: yes
  register: pip_cmd_result
  changed_when: pip_cmd_result['rc'] == 0 and pip_cmd_result['stdout_lines'] == ""

- debug: var=pip_cmd_result.stdout_lines
  when: pip_cmd_result.stdout_lines

- name: install lighdm menu entries
  copy:
    src: "{{item}}"
    dest: /usr/share/xsessions/{{item}}
  with_items:
    - mate-xsession.desktop
    - i3-xsession.desktop

# we want to start gpg-agent with a --user systemd unit file
- name: disable Xession gpg-agent startup script
  lineinfile:
    dest: /etc/X11/Xsession.options
    regexp: ^\s*use-ssh-agent
    line: "# use-ssh-agent"
    backrefs: yes
    state: present

# # also in dotfiles makefile.
# # commented because not idempotent
# - name: install hexchat colorsheme
#   unarchive:
#     src: https://dl.hexchat.net/themes/Monokai.hct
#     dest: ~/.config/hexchat
#     remote_src: True
#   become: no

- name: install entr (fs watcher) on rhel by script
  script: install_entr.sh
  when: ansible_os_family != 'Debian'

- name: change dumpcap capabilities CAP_NET_RAW+eip => use wireshark as non-root
  capabilities: path="{{dumpcap_path}}" capability='CAP_NET_RAW+eip'

- name: change dumpcap capabilities CAP_NET_ADMIN+eip => use wireshark as non-root
  capabilities: path="{{dumpcap_path}}" capability='CAP_NET_ADMIN+eip'
